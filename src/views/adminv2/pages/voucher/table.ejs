<div class="main-panel">
  <div class="content-wrapper">
    <div class="page-header">
      <div class="d-flex justify-content-between align-items-center">
        <h3 class="page-title">Vouchers</h3>
        <h3 class="card-title ms-4">
          <a href="/admin/voucher/create" class="btn btn-primary"> + Add </a>
        </h3>
      </div>
      <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
          <li class="breadcrumb-item active" aria-current="page">Voucher</li>
        </ol>
      </nav>
    </div>
    <%- include ('../../components/messages.ejs')%>
    <div class="row">
      <div class="card">
        <div class="card-body">
          <div class="d-flex justify-content-between align-items-center mb-4">
            <h4 class="card-title mb-0">Table Voucher</h4>
            <input
              type="text"
              id="searchInput"
              class="form-control w-25"
              onkeyup="searchTable()"
              placeholder="Search for voucher name.."
            />
          </div>
          <div class="d-flex justify-content-end mb-3">
            <input
              type="date"
              id="startDate"
              class="form-control me-2 shadow"
              placeholder="Start Date"
            />
            <input
              type="date"
              id="endDate"
              class="form-control me-2 shadow"
              placeholder="End Date"
            />
            <button class="btn btn-primary shadow" onclick="filterByDate()">
              Filter
            </button>
          </div>
          <div class="table-responsive">
            <table class="table table-bordered" id="voucherTable">
              <thead>
                <tr>
                  <th style="width: 7%">No</th>
                  <th>Name</th>
                  <th>Unique Code</th>
                  <th>Used</th>
                  <th>Price</th>
                  <th onclick="sortTableByCreatedAt()" style="cursor: pointer">
                    Created At &#x25B2;&#x25BC;
                  </th>                  
                  <th style="width: 20%">Actions</th>
                </tr>
              </thead>
              <tbody>
                <% voucher.forEach((v, index) => { %>
                <tr>
                  <td><%= (currentPage - 1) * 15 + index + 1 %></td>
                  <td><%= v.name %></td>
                  <td><%= v.unique_code %></td>
                  <td><%= v.is_used === 1 ? "Yes" : "No" %></td>
                  <td><%= v.formattedPrice %></td>
                  <td><%= new Date(v.createdAt).toLocaleString("en-US", { hour12: true }) %></td>
                  <td>
                    <% if (v.is_used === 0) { %>
                      <form action="/admin/voucher/delete/<%= v.id %>?_method=DELETE" method="POST">
                        <a href="/admin/voucher/edit/<%= v.id %>" class="btn btn-warning">
                          <i class="fas fa-pencil-alt"></i> Edit
                        </a>
                        <button type="submit" class="btn btn-danger">
                          <i class="fas fa-trash-alt"></i> Delete
                        </button>
                      </form>
                    <% } else { %>
                      <span class="text-muted">Used voucher cannot be edited or deleted</span>
                    <% } %>
                  </td>
                </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
          
          <!-- Pagination Controls -->
          <nav aria-label="Page navigation" style="padding-top: 20px">
            <ul class="pagination justify-content-center">
              <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                  <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                </li>
              <% } %>
            </ul>
          </nav>
          
        </div>
      </div>
    </div>
  </div>
  <footer class="footer">
    <div class="d-sm-flex justify-content-center justify-content-sm-between">
      <span
        class="text-muted text-center text-sm-left d-block d-sm-inline-block"
        >Copyright Â© 2024
        <a href="/" target="_blank">Yong</a>.
        All rights reserved.</span
      >
    </div>
  </footer>
</div>

<style>
  .online {
    color: green;
  }
  .offline {
    color: red;
  }
</style>

<script>
let sortDirectionCreatedAt = false; // Initialize sort direction for Created At column

function sortTableByCreatedAt() {
  const table = document.getElementById("voucherTable");
  const rows = Array.from(table.rows).slice(1); // Skip header row

  // Sort rows based on the Created At column (index 5)
  const sortedRows = rows.sort((a, b) => {
    const dateA = new Date(a.cells[5].innerText); // Created At column index 5
    const dateB = new Date(b.cells[5].innerText);

    return sortDirectionCreatedAt ? dateB - dateA : dateA - dateB;
  });

  sortDirectionCreatedAt = !sortDirectionCreatedAt; // Toggle sort direction

  // Clear the table and append sorted rows
  const tableBody = table.tBodies[0];
  tableBody.innerHTML = ""; // Clear existing rows
  tableBody.append(...sortedRows); // Append sorted rows

  updateRowNumbers(); // Update row numbers after sorting
}

function filterByDate() {
  const startDateInput = document.getElementById("startDate").value;
  const endDateInput = document.getElementById("endDate").value;
  const table = document.getElementById("voucherTable");
  const rows = Array.from(table.rows).slice(1); // Skip header row

  // Parse start and end dates if provided
  const startDate = startDateInput ? new Date(startDateInput) : null;
  const endDate = endDateInput ? new Date(endDateInput) : null;

  rows.forEach((row) => {
    const createdAtText = row.cells[5].innerText;
    const createdAtDate = new Date(createdAtText);

    // Check if the row should be visible
    let isVisible = true;
    if (startDate && createdAtDate < startDate) isVisible = false;
    if (endDate) {
      // Set endDate to end of the day (23:59:59) to include that day in filtering
      endDate.setHours(23, 59, 59, 999);
      if (createdAtDate > endDate) isVisible = false;
    }

    row.style.display = isVisible ? "" : "none"; // Show or hide row
  });

  updateRowNumbers(); // Update row numbers after filtering
}
function filterByDate() {
  const startDateInput = document.getElementById("startDate").value;
  const endDateInput = document.getElementById("endDate").value;
  const table = document.getElementById("voucherTable");
  const rows = Array.from(table.rows).slice(1); // Skip header row

  // Parse start and end dates if provided
  const startDate = startDateInput ? new Date(startDateInput) : null;
  const endDate = endDateInput ? new Date(endDateInput) : null;

  rows.forEach((row) => {
    const createdAtText = row.cells[5].innerText;
    const createdAtDate = new Date(createdAtText);

    // Check if the row should be visible
    let isVisible = true;
    if (startDate && createdAtDate < startDate) isVisible = false;
    if (endDate) {
      // Set endDate to end of the day (23:59:59) to include that day in filtering
      endDate.setHours(23, 59, 59, 999);
      if (createdAtDate > endDate) isVisible = false;
    }

    row.style.display = isVisible ? "" : "none"; // Show or hide row
  });

  updateRowNumbers(); // Update row numbers after filtering
}

function updateRowNumbers() {
  const table = document.getElementById("voucherTable");
  const rows = Array.from(table.rows).slice(1); // Skip header row

  let visibleRowIndex = 1; // Start row numbering from 1

  rows.forEach((row) => {
    if (row.style.display !== "none") { // Only update visible rows
      row.cells[0].innerText = visibleRowIndex; // Set the row number
      visibleRowIndex++; // Increment the visible row index
    }
  });
}




</script>